AWSTemplateFormatVersion: '2010-09-09'
Description: 'Basic Fargate Service'

Parameters:
  TemplateLoadBalancerName:
    Description: 'Unique name for the load balancer, can be anything'
    Type: String
    MaxLength: 15
  TemplateVPC:
    Description: 'VPC to use'
    Type: AWS::EC2::VPC::Id
  SubnetA:
    Description: 'First Subnet'
    Type: AWS::EC2::Subnet::Id
  SubnetB:
    Description: 'Second Subnet'
    Type: AWS::EC2::Subnet::Id
  LoadBalancerPort:
    Description: 'The client facing port of the load balancer, the port that the load balancer receives the traffic from.'
    Type: Number
    Default: 443
  DestinationPort:
    Description: 'The port that the load balancer sends the traffic to.'
    Type: Number
    Default: 80
  HealthCheckPath:
    Description: 'The location that the HealthCheck should check with HTTP request, looks for a 200 response'
    Type: String
    Default: /
  Certificate:
    Description: Update with the certificate ARN from Certificate Manager, which must exist in the same region.
    Type: String
    Default: 'arn:aws:acm:region:123456789012:certificate/00000000-0000-0000-0000-000000000000'

Resources:
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'LoadBalancerSecurityGroup'
      VpcId: !Ref TemplateVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref LoadBalancerPort
          ToPort: !Ref LoadBalancerPort
          CidrIp: 0.0.0.0/0

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub '${TemplateLoadBalancerName}-LoadBalancer'
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds # this is the default, but is specified here in case it needs to be changed
          Value: 60
      Scheme: internet-facing     # "internal" is also an option
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Subnets:
        - !Ref SubnetA
        - !Ref SubnetB

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: !Ref HealthCheckPath # will look for a 200 status code by default unless specified otherwise
      HealthCheckTimeoutSeconds: 5
      UnhealthyThresholdCount: 2
      HealthyThresholdCount: 2
      Name: !Sub '${TemplateLoadBalancerName}-TargetGroup'
      Port: !Ref DestinationPort
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60 # default is 300
      TargetType: ip
      VpcId: !Ref TemplateVPC

  ListenerHTTPS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      Port: !Ref LoadBalancerPort
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref Certificate



