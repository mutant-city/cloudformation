WAWSTemplateFormatVersion: 2010-09-09
# This CloudFormation template deploys a basic VPC with an attached/reachable IGW 
# Any EC2 instance launched in the subnet is publicly accessible.

Parameters:
  pVPCCidrBlock: 
    Type: String
    Default: 10.1.0.0/16
  pSubnet1CidrBlock:
    Type: String
    Default: 10.1.1.0/24
  pSubnet2CidrBlock:
    Type: String
    Default: 10.1.2.0/24

Resources:
  
  # step 1: create the VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref pVPCCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true

  # step 2: create the internet gateway and attachment
  # Notice how you can't attach an IGW to a VPC unless both are created
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
    
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
      
  # step 3: create a routing table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
  
  # step 4: create a routing table route for the public gateway
  PublicRoute1:   # Public route table has direct routing to IGW:
    Type: AWS::EC2::Route
    DependsOn: PublicRouteTable
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  
  # step 5 create subnets.  (create two in different AZ's, required for things like RDS.)
  Subnet1:
    Type: AWS::EC2::Subnet
    DependsOn: PublicRoute1
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref pSubnet1CidrBlock
      MapPublicIpOnLaunch: true
      # See this directories Readme for info on how this section works
      AvailabilityZone: !Select [ 0, !GetAZs ]

  Subnet2:
    Type: AWS::EC2::Subnet
    DependsOn: PublicRoute1
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref pSubnet2CidrBlock
      MapPublicIpOnLaunch: true
      # See this directories Readme for info on how this section works
      AvailabilityZone: !Select [ 1, !GetAZs ]

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref PublicRouteTable